openapi: 3.0.0
info:
  description: "ガチャアプリ仕様"
  version: "1.0.1"
  title: "Gacha App"
tags:
- name: "user"
  description: "user関連"
- name: "gacha"
  description: "gacha関連"
- name: "item"
  description: "item関連"
paths:
  # User API
  /users:
    post:
      tags:
      - "user"
      operationId: createUser
      description: Userの登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCreateInput'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"
  /users/{Id}:
    get:
      tags:
      - "user"
      operationId: getUser
      description: Userの取得
      parameters:
        - $ref: "#/components/parameters/userIdPathParam"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"
    patch:
      tags:
      - "user"
      operationId: updateUser
      description: Userの更新
      parameters:
        - $ref: "#/components/parameters/userIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userUpdateInput'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"
  /users/{Id}/items:
    get:
      tags:
        - "user"
        - "item"
      operationId: getUseritems
      description: User所持itemの取得
      parameters:
        - $ref: "#/components/parameters/userIdPathParam"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"

  /gachas:
    get:
      tags:
      - "gacha"
      operationId: getGachas
      description: ガチャの取得
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"
        responses:
          "200":
            description: "successful operation"
            schema:
              type: "object"
    post:
      tags:
      - "gacha"
      operationId: createGacha
      description: "ガチャ作成"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gachaCreateInput'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"
  /gachas/{Id}:
    get:
      tags:
      - "gacha"
      operationId: getGacha
      description: ガチャ情報取得
      parameters:
        - $ref: "#/components/parameters/gachaIdPathParam"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"
      security:
      - api_key: []
    post:
      tags:
      - "gacha"
      operationId: drawGacha
      # 何てoperationId名がいいか??
      description: ガチャ実行
      parameters:
        - $ref: "#/components/parameters/gachaIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gachaDrawInput'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"
    put:
      tags:
      - "gacha"
      operationId: updateGacha
      description: ガチャの更新
      parameters:
        - $ref: "#/components/parameters/gachaIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gachaUpdateInput'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"
    delete:
      tags:
      - "gacha"
      operationId: updateGacha
      description: ガチャの削除
      parameters:
        - $ref: "#/components/parameters/gachaIdPathParam"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"

  /items/gachas/{Id}:
    post:
      tags:
      - "item"
      operationId: createItem
      description: アイテムの作成
      parameters:
        - $ref: "#/components/parameters/gachaIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/itemCreateInput'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
      default:
        $ref: "#/components/responses/defaultError"

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

components:
  schemas:
    # User Schema
    userCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 100
        password:
          type: string
          maxLength: 100
        email:
          type: string
      required:
        - id
        - name
        - password
    userUpdateInput:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        password:
          type: string
          maxLength: 100
        email:
          type: string
      required:
        - name


    # Gacha Schema
    # Todo: 上を真似して記述して
    gachaCreateInput:
      type: object
      properties:
        message:
          type: string
          maxLength: 10000
      required:
        - message
    gachaUpdateInput:
      type: object
      properties:
        message:
          type: string
          maxLength: 10000
      required:
        - message
    gachaDrawInput:
      type: "object"
      properties:
        times:
          type: "integer"
          description: ガチャを引く回数

    # Item Schema
    itemCreateInput:
      type: object
      properties:
        message:
          type: string
          maxLength: 10000
      required:
        - message
    # gachaitems:
    #   type: object
    #   description: "ガチャに入ってるもの"
    #   properties:
    #     name:
    #       type: string
    #     rare:
    #       descriotion: "レア度を表すなにか"
    #       type: string
    #     gachaid:
    #       type: interger

    # Shared Schema
    errorMessage:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      required:
        - status
        - message

  # Parameters
  parameters:
    # User Param
    userIdPathParam:
      name: id
      in: path
      required: true
      schema:
        type: string

    gachaIdPathParam:
      name: id
      in: path
      required: true
      schema:
        type: string

  responses:
    # Shared Response
    defaultError:
      description: デフォルトのエラーレスポンスの定義。
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"